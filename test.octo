:const maxShots 5
:const maxAliens 10
:const shotCooldown 7
:alias shotTimer va
:alias counter vb
:alias counter2 v9
:alias spawnTimer v7
:alias shipX vc
:alias shipY vd


# Data

: controls
7 9 5

## Aliens and shots are stored in sets of two bytes for x and y positions

: aliens
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 

: shots
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 

: score
0

: decodedScore
0 0 0



: main
	hires
	shipX := 60
	shipY := 60
	makeAlien
	loop

		gameloop  ## Main game loop
		v0 := 3  
		delay := v0
		v0 := delay
		loop while v0 > 0
			v0 := delay  ## Delay loop to keep the game running smoothly
		again
	again
;

: gameloop
	clear  ## Clear the screen each time. Might be faster to un-draw and re-draw things in new positions, should come back to this.
	## Spawn enemies on a timer
	if spawnTimer == 0 then makeAlien  
	spawnTimer += -1	
	## Update everything in the correct order
	updateShots
	updateAliens	
	updatePlayer
	updateScore
	
;

: updatePlayer
	if shotTimer != 0 then shotTimer += -1 ## shotTimer tracks cooldown for shooting
	## Load up the control numbers and compare if they're being pushed to do the correct input stuff
	i := controls
	load v3
	if v1 key then shipX += +2
	if v2 key then shoot
	if v0 key then shipX += -2
	i := imageShip
	sprite shipX shipY 4
;

: makeAlien
	## 20 "frames" between each enemy spawn
	spawnTimer := 20
	counter := 0
	loop while counter < maxAliens
		i := aliens
		i += counter
		i += counter
		load v1
		if v1 == 0 begin
			## Found an empty pair of bytes in the list to initialise with alien x/y
			v0 := random 0b11111111
			v1 := random 0b00000011
			v1 += 1
			i := aliens
			i += counter
			i += counter
			save v1		
			;
		end
		counter += 1
	again
;


: shoot
	if shotTimer != 0 then ;
	shotTimer := shotCooldown
	counter := 0
	loop while counter < maxShots
		i := shots
		i += counter
		i += counter
		load v1
		if v1 == 0 begin
			## Found an empty pair of bytes in the list to initialise with shot x/y
			i := shots
			i += counter
			i += counter
			## Initialise it above the cannon of the player ship
			v0 := shipX
			v0 += 2
			v1 := shipY
			v1 += -2
			save v1
			;
		end
		counter += 1
	again	
;

: updateShots
	## Update the position of all active shots and draw them
	counter := 0
	v3 := -2
	loop while counter < maxShots
		i := shots
		i += counter
		i += counter	
		load v1
		if v1 != 0 begin
			v1 += -2
			i := shots
			i += counter
			i += counter	
			save v1
			i := imageShot
			sprite v0 v1 3
		end
		counter += 1
	again

;

: updateAliens
## Update the position of all active aliens and draw them
	counter := 0
	loop while counter < maxAliens
		i := aliens
		i += counter
		i += counter	
		load v1
		if v1 != 0 begin
			v1 += 1
			v2 := random 0b000000010
			v2 += -1
			v0 += v2
			if v1 >= 60 then v1 := 0
			if v1 != 0 begin
				i := imageAlien
				sprite v0 v1 5
				## If they are drawn ontop of something (probably a bullet), kill them and increment score
				if vf == 1 begin
					v1 := 0
					i := score
					load v0
					v0 += 1
					i := score
					save v0
				end 
			end
			i := aliens
			i += counter
			i += counter	
			save v1
		end
		counter += 1
	again
;

: updateScore
	v0 := 0
	v1 := 0
	## Fill the top bar
	i := imageFull
	loop while v0 < 128
		sprite v0 v1 4
		v0 += 8
	again
	## Draw the word "kills"
	i := imageKills
	v5 := 50
	v6 := 0
	sprite v5 v6 4
	v2 := 4
	i += v2
	v5 += 8
	sprite v5 v6 4
	v5 += 5
	i := score
	load v0
	i := decodedScore
	bcd v0
	counter := 0
	## Draw the score as a BCD
	loop while counter < 3
		i := decodedScore
		i += counter
		load v0
		i := image0
		i += v0
		i += v0
		i += v0
		i += v0
		sprite v5 v6 4
		v5 += 4
		v2 := 1
		counter += 1
	again
;

# images

: imageShip
0b00111000
0b00111000
0b01111100
0b11111110

: imageAlien
0b01110000
0b11011000
0b10101000
0b11111000
0b01010000

: imageShot
0b11100000
0b11100000
0b11100000
0b00000000

: image0
0b111
0b101
0b101
0b111

0b010
0b010
0b010
0b010

0b111
0b001
0b100
0b111

0b111
0b001
0b111
0b111

0b100
0b100
0b111
0b001

0b111
0b100
0b001
0b111

0b111
0b100
0b101
0b111

0b111
0b001
0b001
0b001

0b111
0b101
0b111
0b111

0b111
0b111
0b001
0b001

: imageKills
0b10101010
0b11001010
0b10101010
0b10101011
0b01001110
0b01001000
0b01000010
0b01101110

: imageFull
0xff
0xff
0xff
0xff



: glitchTable
		jump g0 
		jump g1
		jump g2 
		jump g0 
		jump g1
		jump g2 
		jump g0 
		jump g1
		jump g3		

: gameloop 
	gameloop
	counter2 += 1
	if counter2 < 100 then ;

	i := main
	v0 := random 0b11111111
	v0 <<= v0
	v0 <<= v0
	v0 <<= v0
	i += v0
	audio
	v0 := 50
	buzzer := v0

	counter2 := 30

	v0 := random 0b111111
	counter2 += v0

	i := controls
	v0 := random 0b11111111
	v0 <<= v0
	v0 <<= v0
	i += v0
	v0 := random 0b11111110
	v0 += 1
	i += v0
	v0 := 0xf2 
	v1 := 0x1e
	save v1

	i := imageShip
	v0 := random 0b00111111
	i += v0
	v0 := random 0b11111111
	save v0

	v0 := random 0b0000111
	
	v0 <<= v0
	# general glitch
	jump0 glitchTable
; 

: g0
	# glitch screen texture
	v0 := random 0b11111111
	v1 := random 0b11111111
	plane 2
	i := main
	i += v0
	sprite v0 v1 0
	plane 1

;

: g1
	# glitch enemy texture
	i := imageAlien
	v0 := random 0b11
	i += v0
	v0 := random 0b11111111
	save v0
;

: g2
	#glitchShip
	i := imageShip
	v0 := random 0b11111111
	v2 := random 0b11
	i += v2
	save v0
;

: g3
	# speed up enemies, need to glitch
	#enemySpeed += 2

	i := updateAliens
	v0 := 22
	i += v0

	v0 := 0x71
	v1 := 0x03
	save v1

;